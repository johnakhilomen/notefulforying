{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/johnakhilomen/Downloads/noteful-main 3/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport Folders from './Folders';\nimport Notes from './Notes';\nimport PropTypes from 'prop-types';\nimport HandleError from \"./HandleError\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    try {\n      hfjifjij;\n      const {\n        folders,\n        notes\n      } = this.props.mainProp;\n\n      let selectedNotes = id => {\n        let n = notes.filter(item => item.id == id); // console.log(n);\n\n        return n;\n      }; //Root path \"/\"\n\n\n      if (this.props.otherProps.match == undefined) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(Folders, {\n            foldersProp: folders\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Notes, {\n            notesProp: notes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this);\n      } // console.log(this.props)\n\n\n      const {\n        id\n      } = this.props.otherProps.match.params;\n      let notesSelected = selectedNotes(id);\n      {\n        if (notesSelected.length > 0) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main\",\n            children: [/*#__PURE__*/_jsxDEV(Folders, {\n              foldersProp: folders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Notes, {\n              notesProp: notesSelected\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main\",\n            children: [/*#__PURE__*/_jsxDEV(Folders, {\n              foldersProp: folders\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No notes found!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this);\n        }\n      }\n    } catch (error) {\n      return /*#__PURE__*/_jsxDEV(HandleError, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nMain.propTypes = {\n  folders: PropTypes.array.isRequired,\n  notes: PropTypes.array.isRequired\n};\nexport default Main;","map":{"version":3,"sources":["/Users/johnakhilomen/Downloads/noteful-main 3/src/components/Main.js"],"names":["React","Component","Folders","Notes","PropTypes","HandleError","Main","constructor","props","state","render","hfjifjij","folders","notes","mainProp","selectedNotes","id","n","filter","item","otherProps","match","undefined","params","notesSelected","length","error","propTypes","array","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AACzBM,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AADJ,SAIAC,KAJA,GAIQ,EAJR;AAEC;;AAGDC,EAAAA,MAAM,GAAG;AACL,QAAI;AACAC,MAAAA,QAAQ;AACR,YAAM;AAACC,QAAAA,OAAD;AAAUC,QAAAA;AAAV,UAAmB,KAAKL,KAAL,CAAWM,QAApC;;AACA,UAAIC,aAAa,GAAIC,EAAD,IAAQ;AACxB,YAAIC,CAAC,GAAIJ,KAAK,CAACK,MAAN,CAAaC,IAAI,IAAGA,IAAI,CAACH,EAAL,IAAWA,EAA/B,CAAT,CADwB,CAExB;;AACA,eAAOC,CAAP;AACH,OAJD,CAHA,CAQA;;;AACA,UAAG,KAAKT,KAAL,CAAWY,UAAX,CAAsBC,KAAtB,IAA+BC,SAAlC,EACA;AACE,4BACM;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI,QAAC,OAAD;AAAS,YAAA,WAAW,EAAIV;AAAxB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,SAAS,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADN;AAMD,OAjBD,CAkBA;;;AACA,YAAM;AAACG,QAAAA;AAAD,UAAM,KAAKR,KAAL,CAAWY,UAAX,CAAsBC,KAAtB,CAA4BE,MAAxC;AACA,UAAIC,aAAa,GAAET,aAAa,CAACC,EAAD,CAAhC;AACI;AACI,YAAGQ,aAAa,CAACC,MAAd,GAAuB,CAA1B,EACA;AACI,8BACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACI,QAAC,OAAD;AAAS,cAAA,WAAW,EAAIb;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,SAAS,EAAEY;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAMH,SARD,MASI;AACA,8BACI;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACA,QAAC,OAAD;AAAS,cAAA,WAAW,EAAIZ;AAAxB;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH;AACJ;AAEN,KA1CH,CA2CE,OAAOc,KAAP,EACA;AACE,0BAAO,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AAEF;;AAxDoB;;AA2D7BpB,IAAI,CAACqB,SAAL,GAAiB;AACbf,EAAAA,OAAO,EAAER,SAAS,CAACwB,KAAV,CAAgBC,UADZ;AAEbhB,EAAAA,KAAK,EAAET,SAAS,CAACwB,KAAV,CAAgBC;AAFV,CAAjB;AAKA,eAAevB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Folders from './Folders';\nimport Notes from './Notes';\nimport PropTypes from 'prop-types';\nimport HandleError from \"./HandleError\";\n\nclass Main extends Component {\n    constructor(props)\n    {\n        super(props);\n    }\n\n    state = {  }\n    render() {\n        try {\n            hfjifjij\n            const {folders, notes} = this.props.mainProp;\n            let selectedNotes = (id) => {\n                let n =  notes.filter(item=> item.id == id);\n                // console.log(n);\n                return n;\n            }\n            //Root path \"/\"\n            if(this.props.otherProps.match == undefined)\n            {\n              return(\n                    <div className=\"main\">\n                        <Folders foldersProp = {folders}></Folders>\n                        <Notes notesProp={notes}></Notes>\n                    </div>\n                 );\n            }\n            // console.log(this.props)\n            const {id} =this.props.otherProps.match.params;\n            let notesSelected= selectedNotes(id);\n                {\n                    if(notesSelected.length > 0)\n                    {\n                        return (\n                            <div className=\"main\">\n                                <Folders foldersProp = {folders}></Folders>\n                                <Notes notesProp={notesSelected}></Notes>\n                            </div>\n                         );\n                    }\n                    else{\n                        return (\n                            <div className=\"main\">\n                            <Folders foldersProp = {folders}></Folders>\n                            <p>No notes found!</p>\n                            </div>\n                         );\n                   \n                    }\n                }\n           \n          } \n          catch (error) \n          {\n            return <HandleError error={error} />\n          }\n\n        }\n}\n \nMain.propTypes = {\n    folders: PropTypes.array.isRequired,\n    notes: PropTypes.array.isRequired\n  };\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johnakhilomen/Downloads/noteful-main 3/src/components/Main.js\";\nimport React, { Component } from 'react';\nimport Folders from './Folders';\nimport Notes from './Notes';\nimport PropTypes from 'prop-types';\nimport HandleError from \"./ErrorBoundary\";\n\nvar Main = /*#__PURE__*/function (_Component) {\n  _inherits(Main, _Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"render\",\n    value: function render() {\n      try {\n        //throw Error(\"error!\");\n        var _this$props$mainProp = this.props.mainProp,\n            folders = _this$props$mainProp.folders,\n            notes = _this$props$mainProp.notes,\n            selectedNotes = _this$props$mainProp.selectedNotes;\n\n        if (!this.props.mainProp) {\n          console.log(\"Crashed!\");\n          throw new Error(\"Crashed!\");\n        }\n        /*let selectedNotes = (id) => {\n            let n =  notes.filter(item=> item.id == id);\n            // console.log(n);\n            return n;\n        }*/\n        //Root path \"/\"\n\n\n        if (this.props.otherProps.match == undefined) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"main\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Folders, {\n            foldersProp: folders,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }\n          }), /*#__PURE__*/React.createElement(Notes, {\n            notesProp: notes,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }\n          }));\n        } // console.log(this.props)\n\n\n        var id = this.props.otherProps.match.params.id;\n        var notesSelected = selectedNotes(id);\n        {\n          if (notesSelected.length > 0) {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"main\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Folders, {\n              foldersProp: folders,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 33\n              }\n            }), /*#__PURE__*/React.createElement(Notes, {\n              notesProp: notesSelected,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"main\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Folders, {\n              foldersProp: folders,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 29\n              }\n            }), /*#__PURE__*/React.createElement(\"p\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 29\n              }\n            }, \"No notes found!\"));\n          }\n        }\n      } catch (error) {\n        //return <HandleError error={error} />\n        console.log(error);\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"h2\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 16\n          }\n        }, \"I crashed\"), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 16\n          }\n        }), error.message);\n      }\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nMain.propTypes = {\n  folders: PropTypes.array.isRequired,\n  notes: PropTypes.array.isRequired\n};\nexport default Main;","map":{"version":3,"sources":["/Users/johnakhilomen/Downloads/noteful-main 3/src/components/Main.js"],"names":["React","Component","Folders","Notes","PropTypes","HandleError","Main","props","state","mainProp","folders","notes","selectedNotes","console","log","Error","otherProps","match","undefined","id","params","notesSelected","length","error","message","propTypes","array","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;IAEMC,I;;;AACF,gBAAYC,KAAZ,EACA;AAAA;;AAAA;;AACI,8EAAMA,KAAN;AADJ,UAIAC,KAJA,GAIQ,EAJR;AAAA;AAEC;;;;6BAGQ;AACL,UAAI;AACA;AADA,mCAEwC,KAAKD,KAAL,CAAWE,QAFnD;AAAA,YAEOC,OAFP,wBAEOA,OAFP;AAAA,YAEgBC,KAFhB,wBAEgBA,KAFhB;AAAA,YAEuBC,aAFvB,wBAEuBA,aAFvB;;AAGA,YAAG,CAAC,KAAKL,KAAL,CAAWE,QAAf,EACA;AACII,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,gBAAM,IAAIC,KAAJ,CAAU,UAAV,CAAN;AACH;AACD;AACZ;AACA;AACA;AACA;AACY;;;AACA,YAAG,KAAKR,KAAL,CAAWS,UAAX,CAAsBC,KAAtB,IAA+BC,SAAlC,EACA;AACE,8BACM;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI,oBAAC,OAAD;AAAS,YAAA,WAAW,EAAIR,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,oBAAC,KAAD;AAAO,YAAA,SAAS,EAAEC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,CADN;AAMD,SAtBD,CAuBA;;;AAvBA,YAwBOQ,EAxBP,GAwBY,KAAKZ,KAAL,CAAWS,UAAX,CAAsBC,KAAtB,CAA4BG,MAxBxC,CAwBOD,EAxBP;AAyBA,YAAIE,aAAa,GAAET,aAAa,CAACO,EAAD,CAAhC;AACI;AACI,cAAGE,aAAa,CAACC,MAAd,GAAuB,CAA1B,EACA;AACI,gCACI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACI,oBAAC,OAAD;AAAS,cAAA,WAAW,EAAIZ,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,oBAAC,KAAD;AAAO,cAAA,SAAS,EAAEW,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CADJ;AAMH,WARD,MASI;AACA,gCACI;AAAK,cAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACA,oBAAC,OAAD;AAAS,cAAA,WAAW,EAAIX,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFA,CADJ;AAOH;AACJ;AAEN,OA/CH,CAgDE,OAAOa,KAAP,EACA;AACE;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYS,KAAZ;AACD,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADG,eAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFG,EAGFA,KAAK,CAACC,OAHJ,CAAP;AAKA;AAEF;;;;EAnEUvB,S;;AAsEnBK,IAAI,CAACmB,SAAL,GAAiB;AACbf,EAAAA,OAAO,EAAEN,SAAS,CAACsB,KAAV,CAAgBC,UADZ;AAEbhB,EAAAA,KAAK,EAAEP,SAAS,CAACsB,KAAV,CAAgBC;AAFV,CAAjB;AAKA,eAAerB,IAAf","sourcesContent":["import React, { Component } from 'react';\nimport Folders from './Folders';\nimport Notes from './Notes';\nimport PropTypes from 'prop-types';\nimport HandleError from \"./ErrorBoundary\";\n\nclass Main extends Component {\n    constructor(props)\n    {\n        super(props);\n    }\n\n    state = {  }\n    render() {\n        try {\n            //throw Error(\"error!\");\n            const {folders, notes, selectedNotes} = this.props.mainProp;\n            if(!this.props.mainProp)\n            {\n                console.log(\"Crashed!\")\n                throw new Error(\"Crashed!\")\n            }\n            /*let selectedNotes = (id) => {\n                let n =  notes.filter(item=> item.id == id);\n                // console.log(n);\n                return n;\n            }*/\n            //Root path \"/\"\n            if(this.props.otherProps.match == undefined)\n            {\n              return(\n                    <div className=\"main\">\n                        <Folders foldersProp = {folders}></Folders>\n                        <Notes notesProp={notes}></Notes>\n                    </div>\n                 );\n            }\n            // console.log(this.props)\n            const {id} =this.props.otherProps.match.params;\n            let notesSelected= selectedNotes(id);\n                {\n                    if(notesSelected.length > 0)\n                    {\n                        return (\n                            <div className=\"main\">\n                                <Folders foldersProp = {folders}></Folders>\n                                <Notes notesProp={notesSelected}></Notes>\n                            </div>\n                         );\n                    }\n                    else{\n                        return (\n                            <div className=\"main\">\n                            <Folders foldersProp = {folders}></Folders>\n                            <p>No notes found!</p>\n                            </div>\n                         );\n                   \n                    }\n                }\n           \n          } \n          catch (error) \n          {\n            //return <HandleError error={error} />\n            console.log(error)\n           return <div>\n               <h2>I crashed</h2>\n               <br></br>\n               {error.message}\n               </div>\n          }\n\n        }\n}\n \nMain.propTypes = {\n    folders: PropTypes.array.isRequired,\n    notes: PropTypes.array.isRequired\n  };\n\nexport default Main;"]},"metadata":{},"sourceType":"module"}
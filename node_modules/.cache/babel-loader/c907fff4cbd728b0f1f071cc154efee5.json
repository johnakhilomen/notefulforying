{"ast":null,"code":"import _objectSpread from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johnakhilomen/Downloads/noteful-main 3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johnakhilomen/Downloads/noteful-main 3/src/context/FoldersContext.js\";\nimport React, { Component, createContext } from 'react';\nimport conf from \"../config\";\nimport { v4 as uuidv4 } from 'uuid';\nexport var FolderContext = createContext();\n\nvar FolderContextProvider = /*#__PURE__*/function (_Component) {\n  _inherits(FolderContextProvider, _Component);\n\n  function FolderContextProvider() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FolderContextProvider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FolderContextProvider)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      folders: [],\n      notes: [],\n      notename: \"\",\n      content: \"\",\n      folderSelected: \"\",\n      name: \"\"\n    };\n\n    _this.fetchCall = function (api) {\n      try {\n        return fetch(api);\n      } catch (err) {\n        console.error(err);\n        return err.message;\n      }\n    };\n\n    _this.getId = function () {\n      if (!_this.state.folderSelected) {\n        console.error(\"No selected folder!\");\n      }\n\n      var res = _this.state.folders.find(function (it) {\n        return it.name == _this.state.folderSelected;\n      });\n\n      if (!res) {\n        alert(\"Please select a folder to add note to\");\n        return false;\n      }\n\n      return res.id;\n    };\n\n    _this.handleInput = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.addNote = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var notesLocal;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                if (_this.getId()) {\n                  _context.next = 3;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 3:\n                notesLocal = _this.state.notes; // if(this.getId()){\n                //     notesLocal.push(\n                // {\n                //     \"id\": this.getId(),\n                //     \"name\":this.state.notename,\n                //     \"modified\": new Date(),\n                //     \"content\": this.state.content\n                // }\n                //     );\n\n                _this.setState({\n                  notes: [{\n                    \"id\": '1234',\n                    \"name\": 'test',\n                    \"modified\": new Date(),\n                    \"content\": 'testContent'\n                  }]\n                }); // }\n                // window.location.reload();\n                // alert(\"Note Added!\");\n                // window.history.back();\n\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.addFolder = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var foldersLocal;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                foldersLocal = _this.state.folders;\n                foldersLocal.push({\n                  id: uuidv4(),\n                  name: _this.state.name\n                });\n                console.log(foldersLocal[foldersLocal.length - 1].id);\n\n                _this.setState({\n                  folders: foldersLocal\n                });\n\n                console.log(_this.state.folders);\n                alert(\"Folder Added!\");\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.removeNote = function (id) {\n      var newNotes = _this.state.notes.filter(function (note) {\n        return note.id !== id;\n      });\n\n      _this.setState({\n        notes: newNotes\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FolderContextProvider, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var notes, folders;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.fetchCall(conf.noteapi);\n\n              case 3:\n                _context3.next = 5;\n                return _context3.sent.json();\n\n              case 5:\n                notes = _context3.sent;\n                _context3.next = 8;\n                return this.fetchCall(conf.folderapi);\n\n              case 8:\n                _context3.next = 10;\n                return _context3.sent.json();\n\n              case 10:\n                folders = _context3.sent;\n\n                if (notes) {\n                  _context3.next = 13;\n                  break;\n                }\n\n                throw new Error(\"Crashed!\");\n\n              case 13:\n                this.setState({\n                  notes: notes,\n                  folders: folders\n                });\n                _context3.next = 20;\n                break;\n\n              case 16:\n                _context3.prev = 16;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.error(_context3.t0);\n                return _context3.abrupt(\"return\", _context3.t0.message);\n\n              case 20:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 16]]);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(FolderContext.Provider, {\n        value: _objectSpread({}, this.state, {\n          handleInput: this.handleInput,\n          addNote: this.addNote,\n          addFolder: this.addFolder,\n          removeNote: this.removeNote\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }\n      }, this.props.children);\n    }\n  }]);\n\n  return FolderContextProvider;\n}(Component);\n\nexport default FolderContextProvider;","map":{"version":3,"sources":["/Users/johnakhilomen/Downloads/noteful-main 3/src/context/FoldersContext.js"],"names":["React","Component","createContext","conf","v4","uuidv4","FolderContext","FolderContextProvider","state","folders","notes","notename","content","folderSelected","name","fetchCall","api","fetch","err","console","error","message","getId","res","find","it","alert","id","handleInput","e","target","value","setState","addNote","preventDefault","notesLocal","Date","addFolder","foldersLocal","push","log","length","removeNote","newNotes","filter","note","noteapi","json","folderapi","Error","props","children"],"mappings":"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","sourcesContent":["import React, { Component, createContext } from 'react';\nimport conf from \"../config\";\nimport {v4 as uuidv4} from 'uuid'\n\nexport const FolderContext = createContext();\n\nclass FolderContextProvider extends Component {\n    state = { \n        folders:[],\n        notes:[],\n        notename: \"\",\n        content: \"\",\n        folderSelected: \"\",\n        name: \"\"\n     }\n\n     fetchCall = (api) => {\n         try\n         {\n            return fetch(api);\n         }\n         catch(err)\n        {\n          console.error(err);\n          return err.message;\n        }\n    }\n\n \n     async componentWillMount() {\n        try{\n                let notes = await (await this.fetchCall(conf.noteapi)).json();\n                let folders = await (await this.fetchCall(conf.folderapi)).json();\n                if(!notes)\n                {\n                    throw new Error(\"Crashed!\");\n                }\n                this.setState({\n                  notes:notes,\n                  folders: folders\n                });\n        }\n        catch(err)\n        {\n          console.error(err);\n          return err.message;\n        }\n    \n    } \n\n    getId = () => {\n        if(!this.state.folderSelected)\n        {\n            console.error(\"No selected folder!\")\n        }\n        let res = this.state.folders.find(it=> it.name == this.state.folderSelected);\n        if(!res)\n        {\n            alert(\"Please select a folder to add note to\");\n            return false;\n        }\n        return res.id;\n     }\n    handleInput = (e) => {\n        const{name, value} = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n   \n    addNote = async (e) => {\n        e.preventDefault();\n        if(!this.getId())\n        {\n            return false;\n        }\n        let notesLocal = this.state.notes;\n        \n        // if(this.getId()){\n        //     notesLocal.push(\n                // {\n                //     \"id\": this.getId(),\n                //     \"name\":this.state.notename,\n                //     \"modified\": new Date(),\n                //     \"content\": this.state.content\n    \n                // }\n        //     );\n            this.setState(\n                {\n                notes: [        \n                    {\n                    \"id\": '1234',\n                    \"name\":'test',\n                    \"modified\": new Date(),\n                    \"content\": 'testContent'\n                }]\n            })\n           \n        // }\n        // window.location.reload();\n        // alert(\"Note Added!\");\n        // window.history.back();\n   \n    };\n\n\n\n    addFolder = async (e) => {\n        e.preventDefault();\n        let foldersLocal = this.state.folders;\n        foldersLocal.push({\n            id:uuidv4(),\n            name: this.state.name\n        });\n        console.log(foldersLocal[foldersLocal.length - 1].id);\n        this.setState({\n            folders: foldersLocal\n        })\n        console.log(this.state.folders)\n        alert(\"Folder Added!\");\n    }\n\n    removeNote = (id) =>\n    {\n       let newNotes =  this.state.notes.filter(note=> note.id !== id);\n       this.setState({\n           notes: newNotes\n       });\n    }\n  \n    render() { \n        return (\n            <FolderContext.Provider value={{...this.state, handleInput: this.handleInput, addNote: this.addNote, addFolder: this.addFolder, removeNote: this.removeNote\n            }}>\n                {this.props.children}\n            </FolderContext.Provider>\n          );\n    }\n}\n \nexport default FolderContextProvider;"]},"metadata":{},"sourceType":"module"}